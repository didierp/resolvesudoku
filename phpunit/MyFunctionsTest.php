<?php

use PHPUnit\Framework\TestCase;

class MyFunctionsTest extends TestCase {

	public static function setUpBeforeClass() {
	}

	protected function setUp() {
		require_once(dirname(__FILE__) . "/../src/MyFunctions.php");
		require_once(dirname(__FILE__) . "/../src/Grid.php");
		parent::setUp();
	}

	/**
	 * @testWith
	 *           [0, 0, 0, 0, 0, "-11111111111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [1, 0, 1, 0, 1, "1-1111111111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [2, 0, 2, 0, 2, "11-111111111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [3, 0, 3, 1, 0, "111-11111111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [4, 0, 4, 1, 1, "1111-1111111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [5, 0, 5, 1, 2, "11111-111111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [6, 0, 6, 2, 0, "111111-11111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [7, 0, 7, 2, 1, "1111111-1111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [8, 0, 8, 2, 2, "11111111-111111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [9, 1, 0, 0, 3, "111111111-11111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [10, 1, 1, 0, 4, "1111111111-1111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [11, 1, 2, 0, 5, "11111111111-111111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [12, 1, 3, 1, 3, "111111111111-11111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [13, 1, 4, 1, 4, "1111111111111-1111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [14, 1, 5, 1, 5, "11111111111111-111111111111111111111111111111111111111111111111111111111111111111"]
	 *           [15, 1, 6, 2, 3, "111111111111111-11111111111111111111111111111111111111111111111111111111111111111"]
	 *           [16, 1, 7, 2, 4, "1111111111111111-1111111111111111111111111111111111111111111111111111111111111111"]
	 *           [17, 1, 8, 2, 5, "11111111111111111-111111111111111111111111111111111111111111111111111111111111111"]
	 *           [18, 2, 0, 0, 6, "111111111111111111-11111111111111111111111111111111111111111111111111111111111111"]
	 *           [19, 2, 1, 0, 7, "1111111111111111111-1111111111111111111111111111111111111111111111111111111111111"]
	 *           [20, 2, 2, 0, 8, "11111111111111111111-111111111111111111111111111111111111111111111111111111111111"]
	 *           [21, 2, 3, 1, 6, "111111111111111111111-11111111111111111111111111111111111111111111111111111111111"]
	 *           [22, 2, 4, 1, 7, "1111111111111111111111-1111111111111111111111111111111111111111111111111111111111"]
	 *           [23, 2, 5, 1, 8, "11111111111111111111111-111111111111111111111111111111111111111111111111111111111"]
	 *           [24, 2, 6, 2, 6, "111111111111111111111111-11111111111111111111111111111111111111111111111111111111"]
	 *           [25, 2, 7, 2, 7, "1111111111111111111111111-1111111111111111111111111111111111111111111111111111111"]
	 *           [26, 2, 8, 2, 8, "11111111111111111111111111-111111111111111111111111111111111111111111111111111111"]
	 *           [27, 3, 0, 3, 0, "111111111111111111111111111-11111111111111111111111111111111111111111111111111111"]
	 *           [28, 3, 1, 3, 1, "1111111111111111111111111111-1111111111111111111111111111111111111111111111111111"]
	 *           [29, 3, 2, 3, 2, "11111111111111111111111111111-111111111111111111111111111111111111111111111111111"]
	 *           [30, 3, 3, 4, 0, "111111111111111111111111111111-11111111111111111111111111111111111111111111111111"]
	 *           [31, 3, 4, 4, 1, "1111111111111111111111111111111-1111111111111111111111111111111111111111111111111"]
	 *           [32, 3, 5, 4, 2, "11111111111111111111111111111111-111111111111111111111111111111111111111111111111"]
	 *           [33, 3, 6, 5, 0, "111111111111111111111111111111111-11111111111111111111111111111111111111111111111"]
	 *           [34, 3, 7, 5, 1, "1111111111111111111111111111111111-1111111111111111111111111111111111111111111111"]
	 *           [35, 3, 8, 5, 2, "11111111111111111111111111111111111-111111111111111111111111111111111111111111111"]
	 *           [36, 4, 0, 3, 3, "111111111111111111111111111111111111-11111111111111111111111111111111111111111111"]
	 *           [37, 4, 1, 3, 4, "1111111111111111111111111111111111111-1111111111111111111111111111111111111111111"]
	 *           [38, 4, 2, 3, 5, "11111111111111111111111111111111111111-111111111111111111111111111111111111111111"]
	 *           [39, 4, 3, 4, 3, "111111111111111111111111111111111111111-11111111111111111111111111111111111111111"]
	 *           [40, 4, 4, 4, 4, "1111111111111111111111111111111111111111-1111111111111111111111111111111111111111"]
	 *           [41, 4, 5, 4, 5, "11111111111111111111111111111111111111111-111111111111111111111111111111111111111"]
	 *           [42, 4, 6, 5, 3, "111111111111111111111111111111111111111111-11111111111111111111111111111111111111"]
	 *           [43, 4, 7, 5, 4, "1111111111111111111111111111111111111111111-1111111111111111111111111111111111111"]
	 *           [44, 4, 8, 5, 5, "11111111111111111111111111111111111111111111-111111111111111111111111111111111111"]
	 *           [45, 5, 0, 3, 6, "111111111111111111111111111111111111111111111-11111111111111111111111111111111111"]
	 *           [46, 5, 1, 3, 7, "1111111111111111111111111111111111111111111111-1111111111111111111111111111111111"]
	 *           [47, 5, 2, 3, 8, "11111111111111111111111111111111111111111111111-111111111111111111111111111111111"]
	 *           [48, 5, 3, 4, 6, "111111111111111111111111111111111111111111111111-11111111111111111111111111111111"]
	 *           [49, 5, 4, 4, 7, "1111111111111111111111111111111111111111111111111-1111111111111111111111111111111"]
	 *           [50, 5, 5, 4, 8, "11111111111111111111111111111111111111111111111111-111111111111111111111111111111"]
	 *           [51, 5, 6, 5, 6, "111111111111111111111111111111111111111111111111111-11111111111111111111111111111"]
	 *           [52, 5, 7, 5, 7, "1111111111111111111111111111111111111111111111111111-1111111111111111111111111111"]
	 *           [53, 5, 8, 5, 8, "11111111111111111111111111111111111111111111111111111-111111111111111111111111111"]
	 *           [54, 6, 0, 6, 0, "111111111111111111111111111111111111111111111111111111-11111111111111111111111111"]
	 *           [55, 6, 1, 6, 1, "1111111111111111111111111111111111111111111111111111111-1111111111111111111111111"]
	 *           [56, 6, 2, 6, 2, "11111111111111111111111111111111111111111111111111111111-111111111111111111111111"]
	 *           [57, 6, 3, 7, 0, "111111111111111111111111111111111111111111111111111111111-11111111111111111111111"]
	 *           [58, 6, 4, 7, 1, "1111111111111111111111111111111111111111111111111111111111-1111111111111111111111"]
	 *           [59, 6, 5, 7, 2, "11111111111111111111111111111111111111111111111111111111111-111111111111111111111"]
	 *           [60, 6, 6, 8, 0, "111111111111111111111111111111111111111111111111111111111111-11111111111111111111"]
	 *           [61, 6, 7, 8, 1, "1111111111111111111111111111111111111111111111111111111111111-1111111111111111111"]
	 *           [62, 6, 8, 8, 2, "11111111111111111111111111111111111111111111111111111111111111-111111111111111111"]
	 *           [63, 7, 0, 6, 3, "111111111111111111111111111111111111111111111111111111111111111-11111111111111111"]
	 *           [64, 7, 1, 6, 4, "1111111111111111111111111111111111111111111111111111111111111111-1111111111111111"]
	 *           [65, 7, 2, 6, 5, "11111111111111111111111111111111111111111111111111111111111111111-111111111111111"]
	 *           [66, 7, 3, 7, 3, "111111111111111111111111111111111111111111111111111111111111111111-11111111111111"]
	 *           [67, 7, 4, 7, 4, "1111111111111111111111111111111111111111111111111111111111111111111-1111111111111"]
	 *           [68, 7, 5, 7, 5, "11111111111111111111111111111111111111111111111111111111111111111111-111111111111"]
	 *           [69, 7, 6, 8, 3, "111111111111111111111111111111111111111111111111111111111111111111111-11111111111"]
	 *           [70, 7, 7, 8, 4, "1111111111111111111111111111111111111111111111111111111111111111111111-1111111111"]
	 *           [71, 7, 8, 8, 5, "11111111111111111111111111111111111111111111111111111111111111111111111-111111111"]
	 *           [72, 8, 0, 6, 6, "111111111111111111111111111111111111111111111111111111111111111111111111-11111111"]
	 *           [73, 8, 1, 6, 7, "1111111111111111111111111111111111111111111111111111111111111111111111111-1111111"]
	 *           [74, 8, 2, 6, 8, "11111111111111111111111111111111111111111111111111111111111111111111111111-111111"]
	 *           [75, 8, 3, 7, 6, "111111111111111111111111111111111111111111111111111111111111111111111111111-11111"]
	 *           [76, 8, 4, 7, 7, "1111111111111111111111111111111111111111111111111111111111111111111111111111-1111"]
	 *           [77, 8, 5, 7, 8, "11111111111111111111111111111111111111111111111111111111111111111111111111111-111"]
	 *           [78, 8, 6, 8, 6, "111111111111111111111111111111111111111111111111111111111111111111111111111111-11"]
	 *           [79, 8, 7, 8, 7, "1111111111111111111111111111111111111111111111111111111111111111111111111111111-1"]
	 *           [80, 8, 8, 8, 8, "11111111111111111111111111111111111111111111111111111111111111111111111111111111-"]
	 */
	public function testGetLines($offset, $line, $column, $square, $posS, $grid) {
		$this->assertEquals($square, MyFunctions::getSquareFromOffset($offset), "$offset, $square");
		$this->assertEquals($square, MyFunctions::getSquare($line, $column), "$line, $column, $square");
		$res = MyFunctions::getLines($grid);
		$this->assertEquals("-", $res[$line][$column], "$line, $column, $grid");
		$res = MyFunctions::getColumns($grid);
		$this->assertEquals("-", $res[$column][$line], "$line, $column, $grid");
		$res = MyFunctions::getSquares($grid);
		$this->assertEquals("-", $res[$square][$posS], "$square, $posS, $grid");
	}

	/**
	 * @testWith
	 *           ["-A-86-0-2-79-5-4 -28-9--65-74-3--1-535--24-9---26-5--7--843-7--9--2--56-1-4--9-3-", "---86---2-79-5-4--28-9--65-74-3--1-535--24-9---26-5--7--843-7--9--2--56-1-4--9-3-"]
	 *           ["-A-86-0-2-79-5-4 -28-9--65-74-3--1-535--24-9---26-5--7--843-7--9--2--56-1-4--9-3", "---86---2-79-5-4--28-9--65-74-3--1-535--24-9---26-5--7--843-7--9--2--56-1-4--9-3-"]
	 *           ["56-72-----9---6----AA---8----48--6--00------9----6--5----1784---5--4--7-4-3", "56-72-----9---6---------8----48--6----------9----6--5----1784---5--4--7-4-3------"]
	 */
	public function testCleanGrid($grid, $expectedGrid) {
		$this->assertEquals($expectedGrid, MyFunctions::cleanGrid($grid), "$grid, $expectedGrid");
	}

	/**
	 * @testWith
	 *           ["-A-86-0-2-79-5-4 -28-9--65-74-3--1-535--24-9---26-5--7--843-7--9--2--56-1-4--9-3-", "415863972679152483283947651746398125351724896892615347528436719937281564164579238"]
	 *           ["---86---2-79-5-4--28-9--65-74-3--1-535--24-9---26-5--7--843-7--9--2--56-1-4--9-3-", "415863972679152483283947651746398125351724896892615347528436719937281564164579238"]
	 *           ["9153--67-68-1-7-4-42756----8-1-26354-4---1----------1--6-2-----5-873-1-6---68--97", "915342678683197245427568931871926354349851762256473819764219583598734126132685497"]
	 *           ["-----6-----51--3------7--8---8-9---54-98----3-6--34---9---5--7-2-7--9-3-6132--549", "832946157745128396196573284378692415429815763561734928984351672257469831613287549"]
	 *           ["-1------8---59--6---5--2-7-----8--543-2-1-------4-79--4-----89--51---72-9--------", "219764538734598162685132479197683254342915687568427913473256891851349726926871345"]
	 *           ["----8--7--9-2--13---2-13945--9--27---8-7--69---5------3-7----29---------1-842----", "513984276694257138872613945469832751281745693735196482347561829926378514158429367"]
	 *           ["56-72-----9---6---------8----48--6----------9----6--5----1784---5--4--7-4-3------", "568724193197386524342519867734895612685231749219467358926178435851943276473652981"]
	 *           ["-96--2--71------9-3---6-------8----3-29-4--8--1-------6-------------75---84-2--3-", "596432817142758396378169452465891273729643185813275649657314928231987564984526731"]
	 */
	public function testGetRes($grid, $expectedRes) {
		$my = new Grid($grid);
		$my->computeGrid();
		$this->assertEquals($expectedRes, $my->res, "$grid, $expectedRes");
	}
}